<!-- Asegúrate de incluir jQuery en el <head> o antes de tu script -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<div class="card">
    <div class="card-header">
        <label class="form-label"><strong>FACTURA #</strong></label>
        <div class="d-flex justify-content-end">
            <button class="btn btn-primary mb-2 btn-sm" id="btnTerminar" style="margin-top: 0; margin-bottom: 0;">Terminar</button>
        </div>


        <label class="form-label bold-text" id="txtnumerooc">

@*             @if (@ViewBag.FacID != null)
            {
                @foreach (var item in @ViewBag.FacID)
                {
                    <option value="@(item.id_factura)">@item.id_factura</option>
                }
            } *@
        </label>
    </div>

    <div class="card-body">

        <div class="row align-items-end">

            <div class="col-sm-4">
                <div class="mb-2">
                    <label for="form-label">NIT: </label>
                    <input type="text" class="form-control form-control-sm" id="nitCliente">
                </div>
            </div>

            <div class="col-sm-4">
                <div class="mb-2">
                    <label for="form-label bold-text">Cliente: </label>
                        <label class="form-control form-control-sm" id="txtcliente"></label>
                </div>
            </div>

            <div class="col-sm-4">
                <div class="mb-2">
                    <label for="form-label">Direccion: </label>
                    <label class="form-control form-control-sm" id="direccionCliente"></label>
                </div>
            </div>

        </div>

        <div class="row align-items-end">
            <div class="col-sm-4">
                <div class="mb-2">
                    <label for="form-label">Moneda</label>
                    <select class="form-control form-control-sm" type="text" id="txtmoneda">
                        <option value="3">Quetzales</option>
                    </select>
                </div>
            </div>

            <div class="col-sm-4">
                <div class="mb-2">
                    <label for="form-label">Forma de Pago</label>
                    <select class="form-control form-control-sm" type="text" id="txtformapago">
                        <option value="1">Efectivo</option>
                        <option value="2">Credito</option>
                    </select>
                </div>
            </div>
        </div>

        <hr />

        <div class="row align-items-end">
            <div class="col-sm-2">
                <div class="mb-2">
                    <label for="txtcodigo" class="form-label">Codigo</label>
                    <input type="text" class="form-control form-control-sm" id="txtcodigo" />
                </div>
            </div>
            
            <div class="col-sm-4">
                <div class="mb-2">
                    <label class="form-label">Producto</label>
                    <label class="form-control form-control-sm" id="txtproducto"></label>
                </div>
            </div> 

            <div class="col-sm-2">
                <div class="mb-2">
                    <span><strong>Cantidad Disponible: </strong></span><label id="lbldisponible" class="form-label"></label>
                    <input type="number" min="0" class="form-control form-control-sm" id="txtcantidad" disabled>
                </div>
            </div>

            <div class="col-sm-1">
                <div class="mb-2">
                    <label for="txtprecio" class="form-label">Precio</label>
                    <label class="form-control form-control-sm" id="txtprecio"></label>
                </div>
            </div>

            <div class="col-sm-3">
                <button class="btn btn-success mb-2 btn-sm" id="btnAgregar">Agregar</button>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-12">
                <table class="table table-bordered table-sm" id="tbProducto">
                    <thead>
                        <tr style="background-color: lightsteelblue;">
                            <th scope="col">CodProd</th>
                            <th scope="col">Producto</th>
                            <th scope="col">Cantidad</th>
                            <th scope="col">Precio</th>
                            <th scope="col">Total</th>
                            <th scope="col">Accion</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>


 <script>
    // Evento blur para verificar si el NIT / codigo empleado ya existe cuando se pierde el foco del campo de NIT
    document.getElementById('nitCliente').addEventListener('blur', function () {
        var nit = this.value;
        if (nit) {
            fetch('/Facturas/ObtieneEmpleadoPorNit?nit=' + nit)
                .then(response => response.json())
                .then(data => {
                    var txtCliente = document.getElementById('txtcliente');

                    if (data.existe) {
                        // Si existe, actualiza el label con el nombre del empleado
                        txtCliente.textContent = data.nombreEmpleado; // Nombre del empleado
                        this.value = data.nit; // NIT
                        direccionCliente.textContent = 'Ciudad';
                    } else {
                        // Si no existe, muestra la alerta
                        alert(data.mensaje); // Muestra el mensaje de error
                        txtCliente.textContent = ''; // Limpia el campo de producto
                        direccionCliente.textContent = ''; // Limpia el campo de precio
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Manejo de errores
                });
        } else {
            // Si el campo NIT está vacío, limpiar el label
            document.getElementById('txtcliente').textContent = '';
        }
    });
 </script>

 <script>
    // Evento blur para verificar si el codigo existe cuando se pierde el foco del campo de codigo
    document.getElementById('txtcodigo').addEventListener('blur', function () {
        var codigo = this.value;
        if (codigo) {
            fetch('/Facturas/ObtieneProductoPorCodigo?codigo=' + codigo)
                .then(response => response.json())
                .then(data => {
                    var txtProducto = document.getElementById('txtproducto');
                    var txtPrecio = document.getElementById('txtprecio');
                    var lblDisponible = document.getElementById('lbldisponible');

                    if (data.existe) {
                        // Si existe, actualiza el label con el nombre del producto
                        this.value = codigo;
                        txtProducto.textContent = data.nombreProducto; // Nombre del producto
                        txtPrecio.textContent = data.precio.toFixed(2);
                        lblDisponible.textContent = data.disponible;

                        // Habilitar o deshabilitar el campo de cantidad
                        if (data.disponible > 0) {
                            document.getElementById('txtcantidad').disabled = false; // Habilitar si hay stock disponible
                        } else {
                            document.getElementById('txtcantidad').disabled = true; // Mantener deshabilitado si no hay stock
                            alert('Producto Activo, pero no hay disponibilidad en el inventario.'); // Notificación al usuario
                        }
                    } else {
                        // Si no existe, muestra la alerta
                        alert(data.mensaje); // Muestra el mensaje de error
                        txtProducto.textContent = ''; // Limpia el campo de producto
                        txtPrecio.textContent = ''; // Limpia el campo de precio
                        lblDisponible.textContent = '0';
                        document.getElementById('txtcantidad').disabled = true; // Deshabilitar el campo de cantidad
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Manejo de errores
                });
        } else {
            // Si el campo codigo está vacío, limpiar el label
            document.getElementById('txtproducto').textContent = '';
            document.getElementById('txtprecio').textContent = '';
        }
    });
 </script>



    <script>
    $("#btnAgregar").on("click", function () {
        // Capturar los valores de los campos
        var precio = parseFloat($("#txtprecio").text()); // Obtener el precio desde el label
        var cantidad = parseFloat($("#txtcantidad").val()); // Obtener la cantidad desde el input

        // Validar que los campos tengan valores válidos
        if (isNaN(precio) || isNaN(cantidad) || cantidad < 1) {
            alert('Por favor, ingresa una cantidad válida y asegúrate de que el precio esté disponible.');
            return; // Salir si hay valores inválidos
        }

        // Obtener el valor de disponibilidad
        var disponibilidad = parseFloat($("#lbldisponible").text().replace("Cantidad Disponible: ", "").trim());

        // Obtener el código del producto
        var productoSeleccionado = $("#txtcodigo").val();

        // Validar que el código del producto no esté vacío
        if (!productoSeleccionado) {
            alert('Por favor, ingresa un código de producto válido.');
            return; // Salir si el código es inválido
        }

        // Inicializar variable para total de cantidad existente
        var cantidadTotal = 0;

        // Verificar si el producto ya existe en la tabla y calcular la cantidad total
        var productoExistente = false;
        $("#tbProducto tbody tr").each(function () {
            if ($(this).find("td:eq(0)").text() === productoSeleccionado) { // Comprobar si el código ya existe
                productoExistente = true;
                cantidadTotal += parseFloat($(this).find("td:eq(2)").text()); // Sumar la cantidad existente
                return false; // Salir del bucle
            }
        });

        // Verificar si la nueva cantidad junto con la cantidad existente no excede la disponibilidad
        if (productoExistente) {
            if (cantidadTotal + cantidad > disponibilidad) {
                alert('La suma de la cantidad existente (' + cantidadTotal + ') y la nueva cantidad (' + cantidad + ') excede la cantidad disponible (' + disponibilidad + ').');
                return; // Salir si excede la disponibilidad
            }
        } else {
            // Si el producto no existe, verificar solo la cantidad
            if (cantidad > disponibilidad) {
                alert('La cantidad ingresada no puede ser mayor a la cantidad disponible (' + disponibilidad + ').');
                return; // Salir si la cantidad es mayor a la disponibilidad
            }
        }

        // Calcular el total
        var total = precio * cantidad;
        total = total.toFixed(2);

        // Crear una nueva fila para la tabla
        var newRow = $("<tr>").append(
            $("<td>").text(productoSeleccionado), // Código del producto
            $("<td>").text($("#txtproducto").text()), // Nombre del producto
            $("<td>").text(cantidad), // Cantidad ingresada
            $("<td>").text(precio.toFixed(2)), // Precio del producto
            $("<td>").text(total) // Total calculado
        );

        // Agregar un botón para eliminar el producto
        var deleteButton = $("<button>").text("Eliminar");
        deleteButton.addClass("btn btn-danger btn-sm");
        deleteButton.click(function () {
            newRow.remove(); // Eliminar la fila al hacer clic en el botón "Eliminar"
        });

        newRow.append($("<td>").append(deleteButton)); // Agregar el botón a la fila
        $("#tbProducto tbody").append(newRow); // Agregar la nueva fila a la tabla

        // Limpiar los campos
        $("#txtcantidad").val(""); // Limpiar el campo de cantidad
        $("#txtproducto").text(""); // Limpiar el label de producto
        $("#txtprecio").text(""); // Limpiar el label de precio
        $("#txtcodigo").val(""); // Limpiar el campo de código
        $("#txtcodigo").focus(); // Regresar el foco al campo de código
    });






        //javascript para terminar de agregar productos al detalle
        $("#btnTerminar").on("click", function () {

            var FacDetalle = []
            var total = 0;

            $('table > tbody  > tr').each(function (index, tr) {

                FacDetalle.push(
                    {
                        producto_id: parseInt($(tr).find('td:eq(0)').text()),
                        // descripcion_producto: $(tr).find('td:eq(1)').text(),

                        cantidad_detalle: parseInt($(tr).find('td:eq(2)').text()),
                        precio_detalle: parseFloat($(tr).find('td:eq(3)').text()),
                        subtotal_detalle: parseFloat($(tr).find('td:eq(4)').text())
                    }
                )
                total = total + parseFloat($(tr).find('td:eq(4)').text())
            });

            console.log(FacDetalle)
            console.log(total)




            var Factura = {
                // idOrdenCompra: $("#txtnumerooc").val(),
                cliente_id: $("#txtcliente").val(),
                id_pago: $("#txtformapago").val(),
                id_moneda: $("#txtmoneda").val(),

                total_factura: total,
                lstFacDetalle: FacDetalle
            }

            jQuery.ajax({
                url: '@Url.Action("CrearFactura", "Facturas")',
                type: "POST",
                data: JSON.stringify(Factura),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    console.log(data)
                    if (data.respuesta) {
                        alert("Factura Registrada");
                        window.location.href = '@Url.Action("CrearFactura", "Facturas")';
                    }
                }
            });
        })
    </script>